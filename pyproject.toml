[project]
name = "metricmancer"
version = "3.1.0"
description = "Multi-language software analytics tool for code quality, maintainability, and technical risk. Calculates cyclomatic complexity, code churn, hotspots, and more. Generates CLI, HTML, and JSON reports."
authors = [
  { name = "Thomas Lindqvist", email = "fixaren54_eon@icloud.com" }
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
  "jinja2",
  "pytest",
  "pytest-cov",
  "coverage",
  "pydriller",
  "tqdm",
  "PyYAML",
  "autopep8",
  "flake8",
  "pip-licenses",
  "unidiff>=0.7.5"
]

[project.urls]
Homepage = "https://github.com/CmdrPrompt/MetricMancer"
Repository = "https://github.com/CmdrPrompt/MetricMancer"
Issues = "https://github.com/CmdrPrompt/MetricMancer/issues"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["src"]

[tool.setuptools.package-dir]
"" = "."

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
pythonpath = [
    "src",
    "tests", 
    "."
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.autopep8]
max_line_length = 120
aggressive = 1

[tool.flake8]
max-line-length = 120
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "build",
    "dist",
    "*.egg-info"
]